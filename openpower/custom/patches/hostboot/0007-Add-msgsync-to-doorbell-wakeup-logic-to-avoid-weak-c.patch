From 147bdd8e25512041655c22fbb1e8d3f86eb8904e Mon Sep 17 00:00:00 2001
From: Dan Crowell <dcrowell@us.ibm.com>
Date: Fri, 18 Jan 2019 13:50:07 -0600
Subject: [PATCH 1/2] Add msgsync to doorbell wakeup logic to avoid weak
 consistency bug

POWER9 added a new sync mode called 'msgsync' that is required
to avoid weak consistency issues when you are using doorbell
(msgsnd) functions.

See POWER ISA Section 5.9.2 for details, excerpt here:
The ordering done by sync (and ptesync) provides
the appearance of "causality" across a sequence of
msgsnd instructions, as in the following example.
"msgsnd->T1" means "msgsnd instruction target-
ting thread T1". "<DHDI 0>" means "occurrence of
Directed Hypervisor Doorbell interrupt caused by
msgsnd executed on T0". On T0, register r1 is
assumed to contain the value 1.
  T0           T1           T2
  std r1,X     <DHDI 0>     <DHDI 1>
  sync         msgsnd->T2   msgsync
  msgsnd->T1                ld r1,X
In this example, T2's load from X must return 1.

The change here adds the msgsync call to the code that executes
any time we handle a doorbell interrupt.  In addition there is a
POWER9 DD2 errata that indicates we also require a lwsync to
ensure consistency.

Change-Id: Ib0f3571926d71efcbffa205093278e2a1d58df85
CQ: SW454611
---
 src/include/arch/ppc.H | 16 +++++++++++++++-
 src/kernel/syscall.C   |  8 +++++++-
 2 files changed, 22 insertions(+), 2 deletions(-)

diff --git a/src/include/arch/ppc.H b/src/include/arch/ppc.H
index e9e6b6051..23dbcd370 100644
--- a/src/include/arch/ppc.H
+++ b/src/include/arch/ppc.H
@@ -5,7 +5,7 @@
 /*                                                                        */
 /* OpenPOWER HostBoot Project                                             */
 /*                                                                        */
-/* Contributors Listed Below - COPYRIGHT 2011,2017                        */
+/* Contributors Listed Below - COPYRIGHT 2011,2019                        */
 /* [+] Google Inc.                                                        */
 /* [+] International Business Machines Corp.                              */
 /*                                                                        */
@@ -225,6 +225,20 @@ inline void eieio()
     asm volatile("eieio" ::: "memory");
 }
 
+ALWAYS_INLINE
+inline void msgsync()
+{
+    // See POWER ISA 5.9.2 for details
+    //asm volatile("msgsync" ::: "memory");
+    asm volatile(".long 0x7C0006EC"); // Our GCC doesn't support 'msgsync' yet
+    //  [011111 ///// ///// ///// 11011 10110/]
+
+    // There is a P9 DD2 workaround that a lwsync is also required
+    //  after a msgsync
+    asm volatile("lwsync" ::: "memory");
+}
+
+
 ALWAYS_INLINE
 inline uint64_t getHMER()
 {
diff --git a/src/kernel/syscall.C b/src/kernel/syscall.C
index 580b30d84..50add660b 100644
--- a/src/kernel/syscall.C
+++ b/src/kernel/syscall.C
@@ -5,7 +5,7 @@
 /*                                                                        */
 /* OpenPOWER HostBoot Project                                             */
 /*                                                                        */
-/* Contributors Listed Below - COPYRIGHT 2010,2017                        */
+/* Contributors Listed Below - COPYRIGHT 2010,2019                        */
 /* [+] International Business Machines Corp.                              */
 /*                                                                        */
 /*                                                                        */
@@ -54,6 +54,12 @@ namespace KernelIpc
 extern "C"
 void kernel_execute_hype_doorbell()
 {
+    // Per POWER ISA Section 5.9.2, to avoid any weak consistency
+    //  issues we must use a msgsync instruction before consuming
+    //  any data set by a different thread following a doorbell
+    //  wakeup.
+    msgsync();
+
     task_t* t = TaskManager::getCurrentTask();
     doorbell_clear();
 
-- 
2.20.1.windows.1

