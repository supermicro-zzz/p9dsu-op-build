From c7a3ff298c8c2a996dbfda8d938bd320807dd705 Mon Sep 17 00:00:00 2001
From: jim <jim.yuan@supermicro.com>
Date: Fri, 8 Sep 2017 09:41:12 -0700
Subject: [PATCH 3/4] Boston ESS slot table.

---
 platforms/astbmc/p9dsu.c | 208 ++++++++++++++++++++++++++++++++++++++++++++++-
 platforms/astbmc/slots.c |   2 +-
 2 files changed, 208 insertions(+), 2 deletions(-)

diff --git a/platforms/astbmc/p9dsu.c b/platforms/astbmc/p9dsu.c
index 2a380f3..3a26da9 100644
--- a/platforms/astbmc/p9dsu.c
+++ b/platforms/astbmc/p9dsu.c
@@ -24,6 +24,211 @@
 
 #include "astbmc.h"
 
+static const struct slot_table_entry p9dsu_uio_plx_down[] = {
+	{
+		.etype = st_builtin_dev,
+		.location = ST_LOC_DEVFN(0x1,0),
+		.name = "UIO Slot2",
+	},
+    	{
+		.etype = st_pluggable_slot,
+		.location = ST_LOC_DEVFN(0x8,0),
+		.name = "PLX switch",
+	},
+	{
+		.etype = st_builtin_dev,
+		.location = ST_LOC_DEVFN(0x9,0),
+		.name = "Onboard LAN",
+	},
+	{ .etype = st_end },
+};
+
+static const struct slot_table_entry p9dsu_uio_plx_up[] = {
+	{
+		.etype = st_builtin_dev,
+		.location = ST_LOC_DEVFN(0,0),
+		.children = p9dsu_uio_plx_down,
+		.name = "PLX up",
+	},
+	{ .etype = st_end },
+};
+
+static const struct slot_table_entry p9dsu_wio_plx_down[] = {
+	{
+		.etype = st_builtin_dev,
+		.location = ST_LOC_DEVFN(0x1,0),
+		.name = "WIO Slot1",
+	},	
+    	{
+		.etype = st_pluggable_slot,
+		.location = ST_LOC_DEVFN(0x8,0),
+		.name = "PLX switch",
+	},
+	{
+		.etype = st_pluggable_slot,
+		.location = ST_LOC_DEVFN(0x9,0),
+		.name = "WIO Slot2",
+	},
+	{ .etype = st_end },
+};
+
+static const struct slot_table_entry p9dsu_wio_plx_up[] = {
+	{
+		.etype = st_builtin_dev,
+		.location = ST_LOC_DEVFN(0,0),
+		.children = p9dsu_wio_plx_down,
+		.name = "PLX up",
+	},
+	{ .etype = st_end },
+};
+
+static const struct slot_table_entry p9dsu_phb0_0_slot[] = {
+	{
+		.etype = st_pluggable_slot,
+		.location = ST_LOC_DEVFN(0,0),
+		.name = "UIO Slot1",
+	},
+	{ .etype = st_end },
+};
+
+static const struct slot_table_entry p9dsu_phb0_1_slot[] = {
+	{
+		.etype = st_builtin_dev,
+		.location = ST_LOC_DEVFN(0,0),
+		.children = p9dsu_uio_plx_up,
+		.name = "PLX",
+	},
+	{ .etype = st_end },
+};
+
+static const struct slot_table_entry p9dsu_phb0_2_slot[] = {
+	{
+		.etype = st_builtin_dev,
+		.location = ST_LOC_DEVFN(0,0),
+		.name = "UIO Slot3",
+	},
+	{ .etype = st_end },
+};
+
+static const struct slot_table_entry p9dsu_phb0_3_slot[] = {
+	{
+		.etype = st_builtin_dev,
+		.location = ST_LOC_DEVFN(0,0),
+		.name = "Onboard SAS",
+	},
+	{ .etype = st_end },
+};
+
+static const struct slot_table_entry p9dsu_phb0_4_slot[] = {
+	{
+		.etype = st_builtin_dev,
+		.location = ST_LOC_DEVFN(0,0),
+		.name = "Onboard BMC",
+	},
+	{ .etype = st_end },
+};
+
+static const struct slot_table_entry p9dsu_phb0_5_slot[] = {
+	{
+		.etype = st_builtin_dev,
+		.location = ST_LOC_DEVFN(0,0),
+		.name = "Onboard USB",
+	},
+	{ .etype = st_end },
+};
+
+static const struct slot_table_entry p9dsu_phb8_0_slot[] = {
+	{
+		.etype = st_pluggable_slot,
+		.location = ST_LOC_DEVFN(0,0),
+		.name = "WIO Slot3",
+	},
+	{ .etype = st_end },
+};
+
+static const struct slot_table_entry p9dsu_phb8_1_slot[] = {
+	{
+		.etype = st_pluggable_slot,
+		.location = ST_LOC_DEVFN(0,0),
+		.name = "WIO-R Slot",
+	},
+	{ .etype = st_end },
+};
+
+static const struct slot_table_entry p9dsu_phb8_2_slot[] = {
+	{
+		.etype = st_builtin_dev,
+		.location = ST_LOC_DEVFN(0,0),
+		.children = p9dsu_wio_plx_up,
+		.name = "PLX",
+	},
+	{ .etype = st_end },
+};
+
+static const struct slot_table_entry p9dsu_phb8_3_slot[] = {
+	{
+		.etype = st_pluggable_slot,
+		.location = ST_LOC_DEVFN(0,0),
+		.name = "WIO Slot4",
+	},
+	{ .etype = st_end },
+};
+
+static const struct slot_table_entry p9dsu_phb_table[] = {
+	{
+		.etype = st_phb,
+		.location = ST_LOC_PHB(0,0),
+		.children = p9dsu_phb0_0_slot,
+	},
+	{
+		.etype = st_phb,
+		.location = ST_LOC_PHB(0,1),
+		.children = p9dsu_phb0_1_slot,
+	},
+	{
+		.etype = st_phb,
+		.location = ST_LOC_PHB(0,2),
+		.children = p9dsu_phb0_2_slot,
+	},
+	{
+		.etype = st_phb,
+		.location = ST_LOC_PHB(0,3),
+		.children = p9dsu_phb0_3_slot,
+	},
+	{
+		.etype = st_phb,
+		.location = ST_LOC_PHB(0,4),
+		.children = p9dsu_phb0_4_slot,
+	},
+	{
+		.etype = st_phb,
+		.location = ST_LOC_PHB(0,5),
+		.children = p9dsu_phb0_5_slot,
+	},
+	{
+		.etype = st_phb,
+		.location = ST_LOC_PHB(8,0),
+		.children = p9dsu_phb8_0_slot,
+	},
+	{
+		.etype = st_phb,
+		.location = ST_LOC_PHB(8,1),
+		.children = p9dsu_phb8_1_slot,
+	},
+	{
+		.etype = st_phb,
+		.location = ST_LOC_PHB(8,2),
+		.children = p9dsu_phb8_2_slot,
+	},
+		{
+		.etype = st_phb,
+		.location = ST_LOC_PHB(8,3),
+		.children = p9dsu_phb8_3_slot,
+	},
+	{ .etype = st_end },
+};
+
+
 /*
  * HACK: Hostboot doesn't export the correct data for the system VPD EEPROM
  *       for this system. So we need to work around it here.
@@ -55,6 +260,8 @@ static bool p9dsu_probe(void)
 
 	p9dsu_dt_fixups();
 
+	slot_table_init(p9dsu_phb_table);
+
 	return true;
 }
 
@@ -71,7 +278,6 @@ DECLARE_PLATFORM(p9dsu) = {
 	.resource_loaded	= flash_resource_loaded,
 	.bmc			= &astbmc_smc,  /* FIXME: Add openBMC */
 	.pci_get_slot_info	= slot_table_get_slot_info,
-	.pci_probe_complete	= check_all_slot_table,
 	.cec_power_down         = astbmc_ipmi_power_down,
 	.cec_reboot             = astbmc_ipmi_reboot,
 	.elog_commit		= ipmi_elog_commit,
diff --git a/platforms/astbmc/slots.c b/platforms/astbmc/slots.c
index a2bec87..8be7426 100644
--- a/platforms/astbmc/slots.c
+++ b/platforms/astbmc/slots.c
@@ -77,7 +77,7 @@ static const struct slot_table_entry *match_slot_dev_entry(struct phb *phb,
 		if (ent->etype == st_npu_slot)
 			bdfn = pd->bdfn & 0xf8;
 		else
-			bdfn = pd->bdfn & 0xffff;
+			bdfn = pd->bdfn & 0xff;
 
 		if (ent->location == bdfn)
 			return ent;
-- 
2.9.2.windows.1

